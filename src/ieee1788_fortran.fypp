#:mute

#:set IEEE_CLASS_TYPES = ["ieee_negative_inf", "ieee_negative_zero", "ieee_positive_inf", "ieee_positive_zero"]

#:set REAL_KINDS = ["real32", "real64", "real128"]

#:endmute
module ieee1788_fortran

    #:for KIND in REAL_KINDS
    use, intrinsic :: iso_fortran_env, only: ${KIND}$
    #:endfor

    #:for TYPE in IEEE_CLASS_TYPES
    use, non_intrinsic :: ieee_class_fortran, only: is_${TYPE}$
    #:endfor


    implicit none


    private

    #:for KIND in REAL_KINDS
    public :: bare_infsup_${KIND}$_type
    #:endfor
    #:for TYPE in IEEE_CLASS_TYPES
    public :: is_${TYPE}$
    #:endfor

    #:for KIND in REAL_KINDS

    #:set TYPE_NAME = "bare_infsup_" + KIND + "_type"
    type :: ${TYPE_NAME}$
        real(${KIND}$), private :: inf, sup
    end type ${TYPE_NAME}$
    #:endfor

end module ieee1788_fortran
