var tipuesearch = {"pages":[{"title":" ieee1788_fortran ","text":"ieee1788_fortran","tags":"home","url":"index.html"},{"title":"bare_infsup_real128_type – ieee1788_fortran ","text":"type, public :: bare_infsup_real128_type Source Code type :: bare_infsup_real128_type real ( real128 ), private :: inf , sup end type bare_infsup_real128_type","tags":"","url":"type/bare_infsup_real128_type.html"},{"title":"bare_infsup_real32_type – ieee1788_fortran ","text":"type, public :: bare_infsup_real32_type Source Code type :: bare_infsup_real32_type real ( real32 ), private :: inf , sup end type bare_infsup_real32_type","tags":"","url":"type/bare_infsup_real32_type.html"},{"title":"bare_infsup_real64_type – ieee1788_fortran ","text":"type, public :: bare_infsup_real64_type Source Code type :: bare_infsup_real64_type real ( real64 ), private :: inf , sup end type bare_infsup_real64_type","tags":"","url":"type/bare_infsup_real64_type.html"},{"title":"is_empty – ieee1788_fortran","text":"public interface is_empty Checks whether x is empty set Functions private pure elemental module function bare_infsup_real128_is_empty(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(in) :: x Return Value logical private pure elemental module function bare_infsup_real32_is_empty(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(in) :: x Return Value logical private pure elemental module function bare_infsup_real64_is_empty(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(in) :: x Return Value logical","tags":"","url":"interface/is_empty.html"},{"title":"kind – ieee1788_fortran","text":"public interface kind kind(x) returns the kind value of the entity x . Functions private pure elemental module function bare_infsup_real128_kind(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(in) :: x Return Value integer private pure elemental module function bare_infsup_real32_kind(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(in) :: x Return Value integer private pure elemental module function bare_infsup_real64_kind(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(in) :: x Return Value integer","tags":"","url":"interface/kind.html"},{"title":"set_empty – ieee1788_fortran","text":"public interface set_empty set the empty set to x Subroutines private pure elemental module subroutine bare_infsup_real128_set_empty(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real32_set_empty(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real64_set_empty(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(inout) :: x","tags":"","url":"interface/set_empty.html"},{"title":"set_entire – ieee1788_fortran","text":"public interface set_entire set the whole line to x Subroutines private pure elemental module subroutine bare_infsup_real128_set_entire(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real32_set_entire(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real64_set_entire(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(inout) :: x","tags":"","url":"interface/set_entire.html"},{"title":"ieee1788_fortran – ieee1788_fortran","text":"Uses iso_fortran_env ieee_class_fortran Used by Descendants: ieee1788_fortran_is_empty ieee1788_fortran_kind ieee1788_fortran_set_empty ieee1788_fortran_set_entire Interfaces public        interface is_empty Checks whether x is empty set private pure elemental module function bare_infsup_real128_is_empty(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(in) :: x Return Value logical private pure elemental module function bare_infsup_real32_is_empty(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(in) :: x Return Value logical private pure elemental module function bare_infsup_real64_is_empty(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(in) :: x Return Value logical public        interface kind kind(x) returns the kind value of the entity x . private pure elemental module function bare_infsup_real128_kind(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(in) :: x Return Value integer private pure elemental module function bare_infsup_real32_kind(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(in) :: x Return Value integer private pure elemental module function bare_infsup_real64_kind(x) result(result) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(in) :: x Return Value integer public        interface set_empty set the empty set to x private pure elemental module subroutine bare_infsup_real128_set_empty(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real32_set_empty(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real64_set_empty(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(inout) :: x public        interface set_entire set the whole line to x private pure elemental module subroutine bare_infsup_real128_set_entire(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real128_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real32_set_entire(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real32_type ), intent(inout) :: x private pure elemental module subroutine bare_infsup_real64_set_entire(x) Arguments Type Intent Optional Attributes Name type( bare_infsup_real64_type ), intent(inout) :: x Derived Types type, public :: bare_infsup_real128_type type, public :: bare_infsup_real32_type type, public :: bare_infsup_real64_type","tags":"","url":"module/ieee1788_fortran.html"},{"title":"ieee1788_fortran_is_empty – ieee1788_fortran","text":"Uses ieee_arithmetic Ancestors: ieee1788_fortran","tags":"","url":"module/ieee1788_fortran_is_empty.html"},{"title":"ieee1788_fortran_set_entire – ieee1788_fortran","text":"Uses ieee_class_fortran Ancestors: ieee1788_fortran","tags":"","url":"module/ieee1788_fortran_set_entire.html"},{"title":"ieee1788_fortran_set_empty – ieee1788_fortran","text":"Uses ieee_class_fortran Ancestors: ieee1788_fortran","tags":"","url":"module/ieee1788_fortran_set_empty.html"},{"title":"ieee1788_fortran_kind – ieee1788_fortran","text":"Uses Ancestors: ieee1788_fortran","tags":"","url":"module/ieee1788_fortran_kind.html"},{"title":"ieee1788_fortran_is_empty.f90 – ieee1788_fortran","text":"Source Code submodule ( ieee1788_fortran ) ieee1788_fortran_is_empty use , intrinsic :: ieee_arithmetic , only : ieee_unordered implicit none contains module procedure bare_infsup_real32_is_empty result = ieee_unordered ( x % inf , x % sup ) if ( result ) then result = . false . else result = x % inf . gt . x % sup end if end procedure bare_infsup_real32_is_empty module procedure bare_infsup_real64_is_empty result = ieee_unordered ( x % inf , x % sup ) if ( result ) then result = . false . else result = x % inf . gt . x % sup end if end procedure bare_infsup_real64_is_empty module procedure bare_infsup_real128_is_empty result = ieee_unordered ( x % inf , x % sup ) if ( result ) then result = . false . else result = x % inf . gt . x % sup end if end procedure bare_infsup_real128_is_empty end submodule ieee1788_fortran_is_empty","tags":"","url":"sourcefile/ieee1788_fortran_is_empty.f90.html"},{"title":"ieee1788_fortran_set_entire.f90 – ieee1788_fortran","text":"Source Code submodule ( ieee1788_fortran ) ieee1788_fortran_set_entire use , non_intrinsic :: ieee_class_fortran , only : set_ieee_negative_inf use , non_intrinsic :: ieee_class_fortran , only : set_ieee_positive_inf implicit none contains module procedure bare_infsup_real32_set_entire call set_ieee_negative_inf ( x % inf ) call set_ieee_positive_inf ( x % sup ) end procedure bare_infsup_real32_set_entire module procedure bare_infsup_real64_set_entire call set_ieee_negative_inf ( x % inf ) call set_ieee_positive_inf ( x % sup ) end procedure bare_infsup_real64_set_entire module procedure bare_infsup_real128_set_entire call set_ieee_negative_inf ( x % inf ) call set_ieee_positive_inf ( x % sup ) end procedure bare_infsup_real128_set_entire end submodule ieee1788_fortran_set_entire","tags":"","url":"sourcefile/ieee1788_fortran_set_entire.f90.html"},{"title":"ieee1788_fortran_set_empty.f90 – ieee1788_fortran","text":"Source Code submodule ( ieee1788_fortran ) ieee1788_fortran_set_empty use , non_intrinsic :: ieee_class_fortran , only : set_ieee_negative_inf use , non_intrinsic :: ieee_class_fortran , only : set_ieee_positive_inf implicit none contains module procedure bare_infsup_real32_set_empty call set_ieee_positive_inf ( x % inf ) call set_ieee_negative_inf ( x % sup ) end procedure bare_infsup_real32_set_empty module procedure bare_infsup_real64_set_empty call set_ieee_positive_inf ( x % inf ) call set_ieee_negative_inf ( x % sup ) end procedure bare_infsup_real64_set_empty module procedure bare_infsup_real128_set_empty call set_ieee_positive_inf ( x % inf ) call set_ieee_negative_inf ( x % sup ) end procedure bare_infsup_real128_set_empty end submodule ieee1788_fortran_set_empty","tags":"","url":"sourcefile/ieee1788_fortran_set_empty.f90.html"},{"title":"ieee1788_fortran_kind.f90 – ieee1788_fortran","text":"Source Code submodule ( ieee1788_fortran ) ieee1788_fortran_kind implicit none contains module procedure bare_infsup_real32_kind result = kind ( x % inf ) end procedure bare_infsup_real32_kind module procedure bare_infsup_real64_kind result = kind ( x % inf ) end procedure bare_infsup_real64_kind module procedure bare_infsup_real128_kind result = kind ( x % inf ) end procedure bare_infsup_real128_kind end submodule ieee1788_fortran_kind","tags":"","url":"sourcefile/ieee1788_fortran_kind.f90.html"},{"title":"ieee1788_fortran.f90 – ieee1788_fortran","text":"Source Code module ieee1788_fortran use , intrinsic :: iso_fortran_env , only : real32 use , intrinsic :: iso_fortran_env , only : real64 use , intrinsic :: iso_fortran_env , only : real128 use , non_intrinsic :: ieee_class_fortran , only : is_ieee_negative_inf use , non_intrinsic :: ieee_class_fortran , only : is_ieee_negative_zero use , non_intrinsic :: ieee_class_fortran , only : is_ieee_positive_inf use , non_intrinsic :: ieee_class_fortran , only : is_ieee_positive_zero implicit none private public :: bare_infsup_real32_type public :: bare_infsup_real64_type public :: bare_infsup_real128_type public :: is_empty public :: kind public :: set_empty public :: set_entire type :: bare_infsup_real32_type real ( real32 ), private :: inf , sup end type bare_infsup_real32_type type :: bare_infsup_real64_type real ( real64 ), private :: inf , sup end type bare_infsup_real64_type type :: bare_infsup_real128_type real ( real128 ), private :: inf , sup end type bare_infsup_real128_type !> version: experimental !> Checks whether `x` is empty set interface is_empty module pure elemental function bare_infsup_real32_is_empty ( x ) result ( result ) type ( bare_infsup_real32_type ), intent ( in ) :: x logical :: result end function bare_infsup_real32_is_empty module pure elemental function bare_infsup_real64_is_empty ( x ) result ( result ) type ( bare_infsup_real64_type ), intent ( in ) :: x logical :: result end function bare_infsup_real64_is_empty module pure elemental function bare_infsup_real128_is_empty ( x ) result ( result ) type ( bare_infsup_real128_type ), intent ( in ) :: x logical :: result end function bare_infsup_real128_is_empty end interface is_empty !> `kind(x)` returns the kind value of the entity `x`. interface kind module pure elemental function bare_infsup_real32_kind ( x ) result ( result ) type ( bare_infsup_real32_type ), intent ( in ) :: x integer :: result end function bare_infsup_real32_kind module pure elemental function bare_infsup_real64_kind ( x ) result ( result ) type ( bare_infsup_real64_type ), intent ( in ) :: x integer :: result end function bare_infsup_real64_kind module pure elemental function bare_infsup_real128_kind ( x ) result ( result ) type ( bare_infsup_real128_type ), intent ( in ) :: x integer :: result end function bare_infsup_real128_kind end interface kind !> version: experimental !> set the empty set to `x` interface set_empty module pure elemental subroutine bare_infsup_real32_set_empty ( x ) type ( bare_infsup_real32_type ), intent ( inout ) :: x end subroutine bare_infsup_real32_set_empty module pure elemental subroutine bare_infsup_real64_set_empty ( x ) type ( bare_infsup_real64_type ), intent ( inout ) :: x end subroutine bare_infsup_real64_set_empty module pure elemental subroutine bare_infsup_real128_set_empty ( x ) type ( bare_infsup_real128_type ), intent ( inout ) :: x end subroutine bare_infsup_real128_set_empty end interface set_empty !> version: experimental !> set the whole line to `x` interface set_entire module pure elemental subroutine bare_infsup_real32_set_entire ( x ) type ( bare_infsup_real32_type ), intent ( inout ) :: x end subroutine bare_infsup_real32_set_entire module pure elemental subroutine bare_infsup_real64_set_entire ( x ) type ( bare_infsup_real64_type ), intent ( inout ) :: x end subroutine bare_infsup_real64_set_entire module pure elemental subroutine bare_infsup_real128_set_entire ( x ) type ( bare_infsup_real128_type ), intent ( inout ) :: x end subroutine bare_infsup_real128_set_entire end interface set_entire end module ieee1788_fortran","tags":"","url":"sourcefile/ieee1788_fortran.f90.html"}]}